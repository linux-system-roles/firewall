---
- name: Ensure role handles startup issues
  hosts: all
  gather_facts: false
  tasks:
    - name: Attempt to run role with default parameters (1)
      include_role:
        name: linux-system-roles.firewall

    - name: Mask firewalld
      systemd:
        name: firewalld
        masked: true

    - name: Attempt to run role with default parameters (2)
      include_role:
        name: linux-system-roles.firewall

    - name: Ensure correct package manager for ostree systems
      vars:
        ostree_pkg_mgr: ansible.posix.rhel_rpm_ostree
        ostree_booted_file: /run/ostree-booted
      when: ansible_facts.pkg_mgr | d("") != ostree_pkg_mgr
      block:
        - name: Check if system is ostree
          stat:
            path: "{{ ostree_booted_file }}"
          register: __ostree_booted_stat

        - name: Set package manager to use for ostree
          set_fact:
            ansible_facts: "{{ ansible_facts |
              combine(new_facts, recursive=True) }}"
          vars:
            new_facts:
              pkg_mgr: "{{ ostree_pkg_mgr }}"
          when: __ostree_booted_stat.stat.exists

    - name: Install conflicting service
      package:
        name: nftables
        state: present

    - name: Enable conflicting service
      service:
        name: nftables
        enabled: true

    - name: Attempt to run role, disabling conflicting services
      include_role:
        name: linux-system-roles.firewall
      vars:
        firewall_disable_conflicting_services: true

    - name: Check that conflicting service is disabled
      service:
        name: nftables
        enabled: false
      check_mode: true
      register: result
      failed_when: result.changed
